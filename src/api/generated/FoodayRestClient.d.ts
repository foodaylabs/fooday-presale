import type { BaseHttpRequest } from './core/BaseHttpRequest';
import type { OpenAPIConfig } from './core/OpenAPI';
import { AdminService } from './services/AdminService';
import { ChallengeService } from './services/ChallengeService';
import { CommentService } from './services/CommentService';
import { FoocaService } from './services/FoocaService';
import { IapService } from './services/IapService';
import { InvitationsService } from './services/InvitationsService';
import { MarketplaceService } from './services/MarketplaceService';
import { MediaService } from './services/MediaService';
import { MetaService } from './services/MetaService';
import { MissionService } from './services/MissionService';
import { NotificationService } from './services/NotificationService';
import { PresaleService } from './services/PresaleService';
import { ReviewService } from './services/ReviewService';
import { SpotService } from './services/SpotService';
import { UserService } from './services/UserService';
import { WalletService } from './services/WalletService';
type HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;
export declare class FoodayRestClient {
    readonly admin: AdminService;
    readonly challenge: ChallengeService;
    readonly comment: CommentService;
    readonly fooca: FoocaService;
    readonly iap: IapService;
    readonly invitations: InvitationsService;
    readonly marketplace: MarketplaceService;
    readonly media: MediaService;
    readonly meta: MetaService;
    readonly mission: MissionService;
    readonly notification: NotificationService;
    readonly presale: PresaleService;
    readonly review: ReviewService;
    readonly spot: SpotService;
    readonly user: UserService;
    readonly wallet: WalletService;
    readonly request: BaseHttpRequest;
    constructor(config?: Partial<OpenAPIConfig>, HttpRequest?: HttpRequestConstructor);
}
export {};
